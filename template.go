package main

import (
	_ "embed"
	"encoding/json"
	"os"

	"github.com/cbroglie/mustache"
	"github.com/google/go-github/v60/github"
)

//go:embed git-pr-release.mustache
var defaultTemplate string

func readTemplate(filename *string) (string, error) {
	if filename == nil {
		return defaultTemplate, nil
	}

	data, err := os.ReadFile(*filename)
	if err != nil {
		return "", err
	}

	return string(data), nil
}

type RenderTemplateData struct {
	PullRequests []github.PullRequest `json:"pull_requests"`
	Date         string               `json:"date"`
}

func convertJson(data RenderTemplateData) (any, error) {
	var jsonData any

	jsonByte, err := json.Marshal(data)

	json.Unmarshal(jsonByte, &jsonData)

	if err != nil {
		return nil, err
	}

	return jsonData, nil

}

func RenderTemplate(filename *string, data RenderTemplateData) (string, error) {
	template, err := readTemplate(filename)

	if err != nil {
		return "", err
	}

	jsonData, err := convertJson(data)

	if err != nil {
		return "", err
	}

	text, err := mustache.Render(template, jsonData)

	if err != nil {
		return "", err
	}

	text += `
---
*generated by [odanado/git-pr-release-go](https://github.com/odanado/git-pr-release-go)*
`

	return text, nil
}
